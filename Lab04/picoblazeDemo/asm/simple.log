KCPSM6 Assembler log file for program 'C:\Users\cal\Desktop\School\CST345\Lab04\picoblazeDemo\asm\SIMPLE.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 12 Feb 2015
Assembly timestamp: 22:52:58

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 3FF hex
Nominal program memory size: 1K (1024)   address(9:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 23
Memory locations available: 4073


Assembly listing

 Addr Code                      Instruction

 000                            ; SIMPLE.psm
 000                            ;##########################################################################
 000                            ;## Company:            Oregon Institute of Technology
 000                            ;## Author(s):          Cal Barkman (nahallacman@gmail.com or callahan.barkman@gmail.com)
 000                            ;##
 000                            ;## Creation Date:      2/12/2015
 000                            ;## Revision:           1
 000                            ;## Program Purpose:    Picoblaze program to enter keystrokes from the keypad
 000                            ; on the PMOD1 header to the 4x7seg display, shifting recorded keystrokes
 000                            ; across the 4x7seg display. A pressed button clears the screen to 0's.
 000                            ;##########################################################################
 000                            ;## Assembler Directives
 000                            ;##########################################################################
 000                            CONSTANT KEYPAD, 01                ; Keypad address = port 01 (input)
 000                            CONSTANT BUTTON, 02                ; Button address = port 02 (input)
 000                            CONSTANT out7SEG0, 01              ; 7seg bank 0 address = port 01 (output)
 000                            CONSTANT out7SEG1, 02              ; 7seg bank 1 address = port 02 (output)
 000                            CONSTANT out7SEG2, 03              ; 7seg bank 2 address = port 03 (output)
 000                            CONSTANT out7SEG3, 04              ; 7seg bank 3 address = port 04 (output)
 000                            CONSTANT LEDS, 05                  ; LED bank output = port 5 (output)
 000                            NAMEREG sA, r7seg0
 000                            NAMEREG sB, r7seg1
 000                            NAMEREG sC, r7seg2
 000                            NAMEREG sD, r7seg3
 000                            NAMEREG sE, keypad_value
 000                            ;##########################################################################
 000                            ; Main Program
 000                            ;##########################################################################
 000                initialize: 
 000  28001                     ENABLE INTERRUPT
 001                      main: 
 001                            ;for debugging turn off the LEDS
 001                            ;LOAD s4, 00
 001  09401                     INPUT s4, 01[KEYPAD]
 002                            ; check if a button is pressed, if it is, clear the 7 seg registers
 002                            ; first, load switch vale
 002  09302                     INPUT s3, 02[BUTTON]
 003                            ;then compare it to the inactive value
 003  1D300                     COMPARE s3, 00
 004                            ;and jump if no button is pressed
 004  3200A                     JUMP Z, 00A[no_button_pressed]
 005                            ;if the switch is pressed, clear the registers
 005  01A00                     LOAD sA[r7seg0], 00
 006  01B00                     LOAD sB[r7seg1], 00
 007  01C00                     LOAD sC[r7seg2], 00
 008  01D00                     LOAD sD[r7seg3], 00
 009                            ;and for debugging, turn on the LEDS
 009  014FF                     LOAD s4, FF
 00A         no_button_pressed: 
 00A  2DA01                     OUTPUT sA[r7seg0], 01[out7SEG0]    ; Write the 7 seg output to the appropriate registers
 00B  2DB02                     OUTPUT sB[r7seg1], 02[out7SEG1]
 00C  2DC03                     OUTPUT sC[r7seg2], 03[out7SEG2]
 00D  2DD04                     OUTPUT sD[r7seg3], 04[out7SEG3]
 00E  2D405                     OUTPUT s4, 05[LEDS]
 00F  22001                     JUMP 001[main]                     ; Loop Back to top of main
 010                            ;##########################################################################
 010                            ; Interrupt handling
 010                            ;------------------------------------------------------------------------------------
 2B0                            ADDRESS 2B0
 2B0               int_routine: 
 2B0  09E01                     INPUT sE[keypad_value], 01[KEYPAD]
 2B1  00AB0                     LOAD sA[r7seg0], sB[r7seg1]
 2B2  00BC0                     LOAD sB[r7seg1], sC[r7seg2]
 2B3  00CD0                     LOAD sC[r7seg2], sD[r7seg3]
 2B4  00DE0                     LOAD sD[r7seg3], sE[keypad_value]
 2B5                            ;LOAD s4, AA
 2B5                            ;OUTPUT s4, LEDS
 2B5                            ;JUMP int_routine
 2B5  29001                     RETURNI ENABLE
 3FF                            ADDRESS 3FF                        ;set interrupt vector
 3FF  222B0                     JUMP 2B0[int_routine]


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

C:\Users\cal\Desktop\School\CST345\Lab04\picoblazeDemo\asm\SIMPLE.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   22'd         
 timestamp_minutes 52'd         
 timestamp_seconds 58'd         
 datestamp_year    15'd         
 datestamp_month   2'd          
 datestamp_day     12'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 KEYPAD            01           SIMPLE.psm
 BUTTON            02           SIMPLE.psm
 out7SEG0          01           SIMPLE.psm
 out7SEG1          02           SIMPLE.psm
 out7SEG2          03           SIMPLE.psm
 out7SEG3          04           SIMPLE.psm
 LEDS              05           SIMPLE.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "12 Feb 2015"  
 timestamp$        "22:52:58"     



List of line labels

   Label               Addr  Source PSM File

 * initialize          000   SIMPLE.psm
   main                001   SIMPLE.psm
   no_button_pressed   00A   SIMPLE.psm
   int_routine         2B0   SIMPLE.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD              9
 STAR              -

 AND               -
 OR                -
 XOR               -

 ADD               -
 ADDCY             -
 SUB               -
 SUBCY             -

 TEST              -
 TESTCY            -
 COMPARE           1
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT             3
 OUTPUT            5
 OUTPUTK           -

 STORE             -
 FETCH             -

 DISABLE           -
 ENABLE            1
 RETURNI           1

 JUMP              3
 JUMP@             -
 CALL              -
 CALL@             -
 RETURN            -
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
